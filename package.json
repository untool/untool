{
  "name": "ununtool",
  "description": "javascript tooling platform",
  "author": "dmbch <daniel@dmbch.net>",
  "license": "MIT",
  "private": true,
  "scripts": {
    "start": "cd tests/fixtures/untest && un start",
    "build": "cd tests/fixtures/untest && un build",
    "serve": "cd tests/fixtures/untest && un serve",
    "develop": "cd tests/fixtures/untest && un develop",
    "test": "cross-env NODE_ENV=test ava",
    "lint": "eslint --ignore-path .gitignore '**/*.js'",
    "fmt": "prettier --write --ignore-path .gitignore '**/*.js'",
    "prerelease": "test -n \"$GH_TOKEN\" || (echo 'GH_TOKEN missing'; exit 1)",
    "release": "lerna publish",
    "release:alpha": "yarn release --conventional-prerelease --preid alpha",
    "release:beta": "yarn release --conventional-prerelease --preid beta",
    "release:rc": "yarn release --conventional-prerelease --preid rc",
    "release:graduate": "yarn release --conventional-graduate",
    "update": "yarn upgrade-interactive --latest",
    "snapshot": "yarn reset && yarn test -u",
    "reset": "git clean -dfx && yarn",
    "pretest": "git clean -dfX tests/fixtures/untest",
    "posttest": "git clean -dfXq tests/fixtures",
    "preinstall": "node -e \"process.exit(process.env.npm_execpath.includes('yarn') ? 0 : 1)\""
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/untool/untool.git"
  },
  "bugs": {
    "url": "https://github.com/untool/untool/issues"
  },
  "homepage": "https://github.com/untool/untool#readme",
  "workspaces": [
    "packages/*"
  ],
  "devDependencies": {
    "@babel/core": "^7.7.0",
    "@commitlint/cli": "^8.0.0",
    "@commitlint/config-conventional": "^8.0.0",
    "@commitlint/travis-cli": "^8.0.0",
    "@untool/eslint-config": "^1.0.0",
    "@untool/prettier-config": "^1.0.0",
    "ava": "^2.1.0",
    "canarist": "^1.3.0",
    "cross-env": "^6.0.3",
    "cycle": "^1.0.3",
    "cz-conventional-changelog": "^3.0.0",
    "eslint": "^6.5.1",
    "execa": "^4.0.0",
    "flat": "^5.0.0",
    "husky": "^4.0.0",
    "is-plain-obj": "^2.0.0",
    "lerna": "^3.17.0",
    "lint-staged": "^9.4.2",
    "mkdirp": "^0.5.1",
    "ncp": "^2.0.0",
    "prettier": "1.18.2",
    "puppeteer": "^2.0.0",
    "react": "^16.8.6",
    "react-dom": "^16.8.6",
    "react-helmet-async": "^1.0.4",
    "react-redux": "^7.1.0",
    "react-router-dom": "^5.1.2",
    "redux": "^4.0.1",
    "rimraf": "^3.0.0",
    "supertest": "^4.0.2",
    "uuid": "^3.3.2"
  },
  "engines": {
    "node": "^10.13 || ^12.13"
  },
  "ava": {
    "timeout": "240s",
    "verbose": true,
    "files": [
      "packages/**/*.test.js",
      "tests/**/*",
      "!tests/fixtures"
    ],
    "helpers": [
      "tests/helpers/*"
    ],
    "source": [
      "packages/**/*"
    ]
  },
  "canarist": {
    "repositories": [
      {
        "repository": ".",
        "commands": [
          ""
        ]
      },
      {
        "repository": "https://github.com/xing/hops.git",
        "branch": "master"
      }
    ],
    "rootManifest": {
      "resolutions": {
        "core-js": "^3"
      }
    }
  },
  "renovate": {
    "extends": [
      "@untool/renovate-config:base"
    ],
    "baseBranches": [
      "master",
      "v2.x",
      "v1.x"
    ],
    "packageRules": [
      {
        "baseBranchList": [
          "v1.x"
        ],
        "major": {
          "enabled": false
        },
        "minor": {
          "enabled": false
        }
      }
    ]
  },
  "prettier": "@untool/prettier-config",
  "eslintConfig": {
    "extends": "@untool/eslint-config"
  },
  "lint-staged": {
    "*.js": [
      "prettier --write",
      "git add"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "scope-enum": [
        2,
        "always",
        [
          "untool",
          "core",
          "express",
          "info",
          "react",
          "webpack",
          "yargs"
        ]
      ]
    }
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -e $HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged"
    }
  }
}
